name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Setup environment
      run: |
        curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
        source $HOME/.poetry/env
        poetry --version

    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry --version
        poetry config virtualenvs.create false
        poetry install

    - name: Read all notebooks
      run: |
        nbdev_read_nbs

    - name: Check if all notebooks are cleaned
      run: |
        echo "Check we are starting with clean git checkout"
        if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
        echo "Trying to strip out notebooks"
        nbdev_clean_nbs
        echo "Check that strip out was unnecessary"
        git status -s # display the status to see which nbs need cleaning up
        if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi

    - name: Check if there is no diff library/notebooks
      run: |
        if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi

    - name: Run tests
      run: |
        nbdev_test_nbs

    - name: Build lib
      run: |
        nbdev_build_lib
        python setup.py sdist bdist_wheel

    - uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist

    - name: Publish to PyPI
      run: |
        source $HOME/.poetry/env
        export TWINE_USERNAME=${{ secrets.PYPIUSER }}
        export TWINE_PASSWORD=${{ secrets.PYPIPASS }}
        make publish
